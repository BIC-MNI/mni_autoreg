# Perl script to build the Perl components of MNI_AutoReg (no, really!).
# Has to be run like "perl build_perl_stuff", because one of the points of
# running this is to fill in the #! line in mritotal and autocrop!

$|=1;
print "Performing keyword substitions: ";


# Walk over the command line, splitting up any "VAR=value" arguments

@ARGV = &scan_for_subs (@ARGV);


# Now read and parse the output of `version' (which just prints
# the macros from version.h)

@version=`./version`;
die "Unable to run ./version -- probable bug in Makefile\n"
   if ($? >> 8);

@version = &scan_for_subs (@version);
if (@version)
{
   die "Unrecognizable lines in output of version: \n  " . 
      join ("\n  ", @version) . "\n";
}


# Now walk over the leftovers in @ARGV (filenames, presumably) and 
# perform the substitions in @subs on them

for $file (@ARGV)
{
   print "$file..";
   &perform_subs ($file);
}
print "done\n";


sub scan_for_subs
{
   my (@leftovers);

   while ($_ = shift)
   {
      if (/(\w+)=(.*)/)
      {
         $subs{$1} = $2;
         $subs{$1} =~ s/([\$\@])/\\$1/;
      }
      else
      {
         push (@leftovers, $_);
      }
   }
   @leftovers;
}


sub perform_subs
{
   my ($file) = @_;
   my ($infile) = "${file}.in"; 
   open (INFILE, $infile) || die "Couldn't open ${infile}: $!\n";
   open (OUTFILE, ">$file") || die "Couldn't open ${file}: $!\n";

   while (<INFILE>)
   {
      if (/@([A-Z0-9_]+)@/)
      {
         my $key = $1;
         my $sub = $subs{$key};

         if (defined $sub)
         {
            s/@([A-Z0-9_]+)@/$sub/g;
         }
         else
         {
            warn "$infile, line $.: substition keyword $key found, but no substition for it exists\n";
         }
      }
      print OUTFILE;
   }

   close (INFILE);
   close (OUTFILE);
}
