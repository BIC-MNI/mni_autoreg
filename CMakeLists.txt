# CMakeFiles.txt for the bicpl library
#
# Vladimir S. FONOV - vladimir.fonov@gmail.com

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(MNI_AUTOREG_PACKAGE_VERSION_MAJOR 0)
SET(MNI_AUTOREG_PACKAGE_VERSION_MINOR 99)
SET(MNI_AUTOREG_PACKAGE_VERSION_PATCH 60)

IF(NOT MINC_TOOLKIT_BUILD)

  PROJECT(mni_autoreg)

  # Packaging defines
  SET(CPACK_GENERATOR TGZ)
  SET(CPACK_PACKAGE_VERSION_MAJOR ${MNI_AUTOREG_PACKAGE_VERSION_MAJOR})
  SET(CPACK_PACKAGE_VERSION_MINOR ${MNI_AUTOREG_PACKAGE_VERSION_MINOR})
  SET(CPACK_PACKAGE_VERSION_PATCH ${MNI_AUTOREG_PACKAGE_VERSION_PATCH})
  INCLUDE(CPack)

  FIND_PACKAGE( LIBMINC REQUIRED )
  FIND_PACKAGE( Perl REQUIRED )
  
  OPTION(MNI_AUTOREG_OLD_AMOEBA_INIT "Use old-style (asymmetric) amoeba init" OFF)
  
ENDIF(NOT MINC_TOOLKIT_BUILD)

INCLUDE( ${LIBMINC_USE_FILE} )


ENABLE_TESTING()
INCLUDE(CTest)


SET(PACKAGE "mni_autoreg")
SET(PACKAGE_BUGREPORT "louis@bic.mni.mcgill.ca")

SET(PACKAGE_NAME "mni_autoreg")
SET(PACKAGE_VERSION "${MNI_AUTOREG_PACKAGE_VERSION_MAJOR}.${MNI_AUTOREG_PACKAGE_VERSION_MINOR}.${MNI_AUTOREG_PACKAGE_VERSION_PATCH}")
SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")

INCLUDE( ${LIBMINC_USE_FILE} )

ADD_DEFINITIONS(-DHAVE_CONFIG_H)

# aliases
SET(VERSION "${PACKAGE_VERSION}")


# check for prereqs
INCLUDE(CheckIncludeFiles)

CHECK_INCLUDE_FILES(float.h     HAVE_FLOAT_H)
CHECK_INCLUDE_FILES(limits.h    HAVE_LIMITS_H)
CHECK_INCLUDE_FILES(sys/stat.h  HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(values.h    HAVE_VALUES_H)
CHECK_INCLUDE_FILES(unistd.h    HAVE_UNISTD_H)
CHECK_INCLUDE_FILES(memory.h    HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(math.h      HAVE_MATH_H)
CHECK_INCLUDE_FILES(malloc.h    HAVE_MALLOC_H)
CHECK_INCLUDE_FILES(stdlib.h    HAVE_STDLIB_H)
CHECK_INCLUDE_FILES(inttypes.h  HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(string.h    HAVE_STRING_H)
CHECK_INCLUDE_FILES(strings.h   HAVE_STRINGS_H)

SET(MNI_AUTOREG_COMPILE_DATETIME "")
SET(MNI_AUTOREG_COMPILE_USER  "")
SET(MNI_AUTOREG_COMPILE_SYSTEM ${CMAKE_SYSTEM})
SET(MNI_AUTOREG_COMPILE_HOST "")
SET(MNI_AUTOREG_LONG_VERSION ${PACKAGE_STRING})

# others
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/epm-header.in  ${CMAKE_CURRENT_BINARY_DIR}/epm-header)

INCLUDE_DIRECTORIES(  ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/Proglib )
LINK_LIBRARIES( ${VOLUME_IO_LIBRARIES} ${LIBMINC_LIBRARIES})

ADD_SUBDIRECTORY(Proglib)
ADD_SUBDIRECTORY(make_phantom)
ADD_SUBDIRECTORY(mincbbox)
ADD_SUBDIRECTORY(mincblur )
ADD_SUBDIRECTORY(mincchamfer )
ADD_SUBDIRECTORY(minctracc )
ADD_SUBDIRECTORY(perl )

add_custom_target (mni_autoreg ALL
 DEPENDS
 minctracc mincblur make_phantom mincchamfer mincbbox
 )


# testing
IF(BUILD_TESTING)
	ADD_SUBDIRECTORY(Testing)
ENDIF(BUILD_TESTING)
